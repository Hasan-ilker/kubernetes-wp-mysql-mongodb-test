# Secret tanımı
apiVersion: v1
kind: Secret
metadata:
  name: production-mysql-secret
  namespace: production
type: Opaque
data:
  mysql-root-password: cm9vdHBhc3N3b3Jk # Base64 encoded "rootpassword"
  mysql-database: d29yZHByZXNz          # Base64 encoded "wordpress"

---

# PersistentVolume ve PersistentVolumeClaim tanımları (MySQL için)
apiVersion: v1
kind: PersistentVolume
metadata:
  name: production-mysql-pv
  namespace: production
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data/production-mysql

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: production-mysql-pvc
  namespace: production
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

# PersistentVolume ve PersistentVolumeClaim tanımları (WordPress için)
apiVersion: v1
kind: PersistentVolume
metadata:
  name: production-wordpress-pv
  namespace: production
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data/production-wordpress

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: production-wordpress-pvc
  namespace: production
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

# MySQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: production-mysql
  namespace: production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: production-mysql
  template:
    metadata:
      labels:
        app: production-mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: production-mysql-secret
              key: mysql-root-password
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: production-mysql-secret
              key: mysql-database
        ports:
        - containerPort: 3306
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-storage
      volumes:
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: production-mysql-pvc

---

# WordPress Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: production-wordpress
  namespace: production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: production-wordpress
  template:
    metadata:
      labels:
        app: production-wordpress
    spec:
      containers:
      - name: wordpress
        image: wordpress:latest
        env:
        - name: WORDPRESS_DB_HOST
          value: production-mysql
        - name: WORDPRESS_DB_USER
          value: root
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: production-mysql-secret
              key: mysql-root-password
        - name: WORDPRESS_DB_NAME
          valueFrom:
            secretKeyRef:
              name: production-mysql-secret
              key: mysql-database
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        volumeMounts:
        - mountPath: /var/www/html
          name: wordpress-storage
      volumes:
      - name: wordpress-storage
        persistentVolumeClaim:
          claimName: production-wordpress-pvc

---

# MySQL Servisi
apiVersion: v1
kind: Service
metadata:
  name: production-mysql
  namespace: production
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    app: production-mysql
  clusterIP: None

---

# WordPress Servisi
apiVersion: v1
kind: Service
metadata:
  name: production-wordpress
  namespace: production
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: production-wordpress
  type: ClusterIP